name: Build and Deploy to GCE with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up JDK 17 (for building the Spring Boot application)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # 3. Add execution permission for the Gradle wrapper
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 4. Build the Spring Boot application using Gradle
      - name: Build with Gradle
        run: ./gradlew build -x test  # Skip tests to speed up the build process

      # 5. Verify the JAR file exists (Optional, for debugging)
      - name: Verify JAR file exists
        run: ls -la target/

      # 6. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 7. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # 8. Build Docker image
      - name: Build Docker image
        run: |
          docker build -t minturtle/careersupport:latest .

      # 9. Push Docker image to Docker Hub
      - name: Push Docker image to Docker Hub
        run: |
          docker push minturtle/careersupport:latest

  deploy:
    name: Deploy to GCE via SSH
    runs-on: ubuntu-latest
    needs: build

    steps:
      # 1. Checkout the repository (to get docker-compose.yml)
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up SSH
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.GCE_SSH_PRIVATE_KEY }}

      # 3. Deploy to GCE
      - name: Deploy to Google Compute Engine
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.GCE_USER }}@${{ secrets.GCE_HOST }} << 'EOF'
            cd /home/ubuntu
            sudo docker-compose pull
            sudo docker-compose up -d
          EOF
