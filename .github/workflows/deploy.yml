name: Build and Deploy to GCE with Docker Compose

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Spring Boot Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v3
        with:
          name: careersupport-jar
          path: build/libs/*.jar

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download and rename JAR artifact
        uses: actions/download-artifact@v3
        with:
          name: careersupport-jar
          path: app

      - name: Rename JAR file
        run: |
          find app -name "careersupport-*.jar" -type f -exec mv {} app/app.jar \;

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: minturtle/careersupport:latest

  deploy:
    name: Deploy to GCE via SSH
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.GCE_SSH_PRIVATE_KEY }}

      - name: Deploy to Google Compute Engine
        env:
          GCE_USER: ${{ secrets.GCE_USER }}
          GCE_HOST: ${{ secrets.GCE_HOST }}
        run: |
          ssh -o StrictHostKeyChecking=no $GCE_USER@$GCE_HOST << 'EOF'
            cd /home/ubuntu
            sudo docker-compose pull
            sudo docker-compose up -d
          EOF
